Prompt *** Table Sec_Users 
-- Drop table 
drop table Sec_Users cascade constraints;
-- Create table 
create table Sec_Users
(
  Person_ID    NUMBER,
  UserID       varchar2(20) not null,
  Pwd          varchar2(16) not null,
  Role_id      NUMBER,
  Dflt_Lang_ID NUMBER,
  Active       Char(1) DEFAULT 'T',
  Expiry_Dt    DATE,
  NOTE_NOTES_ID  Number,  
  deleted      CHAR(1) default 'F',
  Modify_Seq   Number  default 0,
  Update_Status Number default 0
);
-- Add comments to the table 
comment on table Sec_Users
  is 'Application Sec_Users';
-- Create/Recreate primary, unique and foreign key constraints 
alter table Sec_Users
  add constraint UQ_Sec_Users_Name UNIQUE (UserID);
  
--alter table Sec_Users  
--  add constraint FK_Sec_Users_Roles 
--  foreign key (Role_id)
--  references Sec_Roles (ID);

--alter table Sec_Users  
--    add constraint FK_Sec_Users_Notes
--    Foreign Key (NOTE_NOTES_ID)
--    References Notes(Notes_Id);
  

--alter table Sec_Users  
--  add constraint FK_Sec_Users_Lang 
--  foreign key (Dflt_lang_id)
--  references LU_Languages (ID);
  
-- Add trigger to encrypt password.
create or replace trigger Sec_Users_Enc
  before  insert or Update of Pwd on Sec_Users
  for each row
declare
 input_string        VARCHAR2(16) :=LPad(:New.Pwd,16,' ');
 key_string          VARCHAR2(8)  := 'AnDaluSe';
 encrypted_string    VARCHAR2(2048);
begin
 dbms_obfuscation_toolkit.DESEncrypt(
               input_string => input_string, 
               key_string => key_string, 
               encrypted_string =>encrypted_string );
 :New.Pwd:=encrypted_string;              
                
end Sec_Users_Enc;

/


